// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using qwerty.Models;

namespace qwerty.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20191218024854_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("qwerty.Models.Association", b =>
                {
                    b.Property<int>("AssociationId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ActivityId");

                    b.Property<int>("UserId");

                    b.HasKey("AssociationId");

                    b.HasIndex("ActivityId");

                    b.HasIndex("UserId");

                    b.ToTable("Associations");
                });

            modelBuilder.Entity("qwerty.Models.DojoActivity", b =>
                {
                    b.Property<int>("DojoActivityId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ActivityDate");

                    b.Property<string>("ActivityDescription")
                        .IsRequired();

                    b.Property<DateTime>("ActivityTime");

                    b.Property<int>("CoordinatorId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("DojoActivityName")
                        .IsRequired();

                    b.Property<int>("DurationInt");

                    b.Property<string>("DurationMeasure")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("DojoActivityId");

                    b.HasIndex("CoordinatorId");

                    b.ToTable("DojoActivities");
                });

            modelBuilder.Entity("qwerty.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<DateTime>("UpdatedAt");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("qwerty.Models.Association", b =>
                {
                    b.HasOne("qwerty.Models.DojoActivity", "Activity")
                        .WithMany("JoinedUsers")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("qwerty.Models.User", "User")
                        .WithMany("RegisteredActivities")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("qwerty.Models.DojoActivity", b =>
                {
                    b.HasOne("qwerty.Models.User", "Coordinator")
                        .WithMany()
                        .HasForeignKey("CoordinatorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
